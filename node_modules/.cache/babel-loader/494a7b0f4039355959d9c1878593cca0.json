{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"all\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", null, \"Enter the text you want to correct.\", -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = [\"value\"];\nconst _hoisted_4 = {\n  class: \"words\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" the text correction\"), _createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"input\", {\n    type: \"text\",\n    value: $props.modelValue,\n    onInput: _cache[0] || (_cache[0] = $event => _ctx.$emit('update:modelValue', $event.target.value))\n  }, null, 40\n  /* PROPS, HYDRATE_EVENTS */\n  , _hoisted_3), _createElementVNode(\"input\", {\n    type: \"submit\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.submit && $options.submit(...args))\n  }), _createElementVNode(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.splits, post => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"error_word\",\n      key: post.id\n    }, _toDisplayString(post), 1\n    /* TEXT */\n    );\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])])], 2112\n  /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;EAIKA,KAAK,EAAC;;;gCACJC,oBAA8C,KAA9C,EAA8C,IAA9C,EAAK,qCAAL,EAAwC;AAAA;AAAxC;;;;EAIED,KAAK,EAAC;;;6DANfE,6CACAD,oBAUM,KAVN,cAUM,CATCE,UASD,EARFF,oBAAiG,OAAjG,EAAiG;IAA1FG,IAAI,EAAC,MAAqF;IAA7EC,KAAK,EAAEC,iBAAsE;IAAzDC,OAAK,sCAAEC,WAAK,mBAAL,EAA2BC,MAAM,CAACC,MAAP,CAAcL,KAAzC,CAAF;EAAoD,CAAjG;;EAAA,aAQE,EAPFJ,oBAAqC,OAArC,EAAqC;IAA9BG,IAAI,EAAC,QAAyB;IAAfO,OAAK,yCAAEC,2CAAF;EAAU,CAArC,CAOE,EALFX,oBAIM,KAJN,cAIM,oBAHFY,oBAEMC,SAFN,EAEM,IAFN,EAEMC,YAFkCC,YAElC,EAFyBC,IAAe,IAAX;yBAAnCJ,oBAEM,KAFN,EAEM;MAFDb,KAAK,EAAC,YAEL;MAFkDkB,GAAG,EAAED,IAAI,CAACE;IAE5D,CAFN,mBACMF,KADN,EACU;IAAA;IADV;GAEM,CAFN;;EAAA,CAGE,EAJN,CAKE,CAVN","names":["class","_createElementVNode","_createCommentVNode","_hoisted_2","type","value","$props","onInput","_ctx","$event","target","onClick","$options","_createElementBlock","_Fragment","_renderList","$data","post","key","id"],"sourceRoot":"","sources":["/Users/fareskerkeni/Desktop/vue/spell_checker/src/components/input.vue"],"sourcesContent":["<template>\n  \n   \n<!-- the text correction--> \n<div class=\"all\">\n       <div>Enter the text you want to correct.</div>\n    <input type=\"text\" :value=\"modelValue\" @input=\"$emit('update:modelValue', $event.target.value)\"/>\n    <input type=\"submit\" @click=\"submit\">\n    \n    <div class=\"words\">\n        <div class=\"error_word\" v-for=\"post in  splits \" v-bind:key=\"post.id\" >\n            {{post}}\n        </div> \n    </div>\n</div>\n \n    \n    \n</template>\n\n<script>\n/* eslint-disable no-mixed-spaces-and-tabs */\nimport axios from 'axios'\nexport default {\n    name: 'input_user',\n    props:{\n        modelValue: String\n    },\n    data(){\n        return{\n            test: '',\n            comp: 0,\n            splits:[],\n            errors_copie:[],\n        }\n    },\n    created(){\n      axios.get()\n      \n     },\n    methods:{\n        submit: function(){\n            //stocker le text utilisateur\n            this.test+=this.modelValue\n            //tranformation en tableau\n            this.splits = this.test.split(\" \");\n            console.log(this.splits)\n            this.api()\n           \n            \n        },\n        // change_text: function(texte){\n        //     var splits = texte.split(\" \", 3);\n        //     console.log(\"re\")\n        //     return splits\n        // },\n        api: function(){\n            const axios = require(\"axios\");\n            const options = {\n              method: 'POST',\n              url: 'https://jspell-checker.p.rapidapi.com/check',\n              headers: {\n                'content-type': 'application/json',\n                'X-RapidAPI-Key': 'b99b6429b8msh5b66ff41fd65591p1c52f0jsn03117ac8e6dc',\n                'X-RapidAPI-Host': 'jspell-checker.p.rapidapi.com'\n              },\n              data: '{\"language\":\"frFR\",\"fieldvalues\":\"1\",\"config\":{\"forceUpperCase\":false,\"ignoreIrregularCaps\":false,\"ignoreFirstCaps\":true,\"ignoreNumbers\":true,\"ignoreUpper\":false,\"ignoreDouble\":false,\"ignoreWordsWithNumbers\":true}}'\n            };\n            //modification de la valeur de data\n\n            options.data=options.data.replace('1', this.test);\n            \n            axios.request(options).then(function (response) {\n                //const suggestions=response.data.elements[0].errors[0].suggestions\n                //recuperation erreur utilisateur\n                const errors = response.data.elements[0].errors\n                const copie = [];\n                errors.forEach(element => copie.push(element.word));\n                // errors.forEach(element => console.log(element.suggestions));\n                \n                 console.log(copie)\n\n               \n            \n               \n                \n                // console.log(errors)\n\n                // console.log(suggestions)\n            }).catch(function (error) {\n\t            \n                console.error(error);\n                \n            });\n           \n        }\n    }\n};\n\n</script>\n\n<style lang=\"scss\">\n.all{\n    display: flex;\n   \n    align-items: center;\n    justify-content: start;\n    flex-direction: column;\n   \n    .words{\n        width: 50%;\n        height: 500px;\n        border: solid black;\n        margin: 50px;\n        overflow-y: scroll;\n        flex-direction: row;\n    .error_word{\n       margin: 0;\n       border: solid blue;\n        flex-direction: row;\n    }\n}\n   \n}\n\n\n</style>"]},"metadata":{},"sourceType":"module"}