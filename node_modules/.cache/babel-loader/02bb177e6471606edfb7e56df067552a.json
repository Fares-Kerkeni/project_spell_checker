{"ast":null,"code":"/* eslint-disable no-mixed-spaces-and-tabs */\nimport axios from 'axios';\nexport default {\n  name: 'input_user',\n  props: {\n    modelValue: String\n  },\n\n  data() {\n    return {\n      test: '',\n      comp: 0,\n      new: []\n    };\n  },\n\n  created() {\n    axios.get();\n  },\n\n  methods: {\n    submit: function () {\n      this.test += this.modelValue;\n      this.api();\n      this.change_text(this.text);\n    },\n    change_text: function (texte) {\n      var splits = texte.split(\" \");\n      console.log(splits);\n      return splits;\n    },\n    api: function () {\n      const axios = require(\"axios\");\n\n      const options = {\n        method: 'POST',\n        url: 'https://jspell-checker.p.rapidapi.com/check',\n        headers: {\n          'content-type': 'application/json',\n          'X-RapidAPI-Key': 'b99b6429b8msh5b66ff41fd65591p1c52f0jsn03117ac8e6dc',\n          'X-RapidAPI-Host': 'jspell-checker.p.rapidapi.com'\n        },\n        data: '{\"language\":\"frFR\",\"fieldvalues\":\"1\",\"config\":{\"forceUpperCase\":false,\"ignoreIrregularCaps\":false,\"ignoreFirstCaps\":true,\"ignoreNumbers\":true,\"ignoreUpper\":false,\"ignoreDouble\":false,\"ignoreWordsWithNumbers\":true}}'\n      }; //modification de la valeur \n\n      options.data = options.data.replace('1', this.test);\n      axios.request(options).then(function (response) {\n        //const suggestions=response.data.elements[0].errors[0].suggestions\n        const errors = response.data.elements[0].errors;\n        var copie = [];\n        errors.forEach(element => copie.push(element.word));\n        errors.forEach(element => console.log(element.suggestions)); // console.log(copie)\n        // console.log(errors)\n        // console.log(suggestions)\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"AAgBA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,eAAe;EACXC,IAAI,EAAE,YADK;EAEXC,KAAK,EAAC;IACFC,UAAU,EAAEC;EADV,CAFK;;EAKXC,IAAI,GAAE;IACF,OAAM;MACFC,IAAI,EAAE,EADJ;MAEFC,IAAI,EAAE,CAFJ;MAGFC,GAAG,EAAC;IAHF,CAAN;EAKH,CAXU;;EAYXC,OAAO,GAAE;IACPT,KAAK,CAACU,GAAN;EAEA,CAfS;;EAgBXC,OAAO,EAAC;IACJC,MAAM,EAAE,YAAU;MACd,KAAKN,IAAL,IAAW,KAAKH,UAAhB;MACA,KAAKU,GAAL;MACA,KAAKC,WAAL,CAAiB,KAAKC,IAAtB;IAEH,CANG;IAOJD,WAAW,EAAE,UAASE,KAAT,EAAe;MACxB,IAAIC,MAAK,GAAID,KAAK,CAACE,KAAN,CAAY,GAAZ,CAAb;MACAC,OAAO,CAACC,GAAR,CAAYH,MAAZ;MACA,OAAOA,MAAP;IACH,CAXG;IAYJJ,GAAG,EAAE,YAAU;MACX,MAAMb,KAAI,GAAIqB,OAAO,CAAC,OAAD,CAArB;;MACA,MAAMC,OAAM,GAAI;QACdC,MAAM,EAAE,MADM;QAEdC,GAAG,EAAE,6CAFS;QAGdC,OAAO,EAAE;UACP,gBAAgB,kBADT;UAEP,kBAAkB,oDAFX;UAGP,mBAAmB;QAHZ,CAHK;QAQdpB,IAAI,EAAE;MARQ,CAAhB,CAFW,CAYX;;MACAiB,OAAO,CAACjB,IAAR,GAAaiB,OAAO,CAACjB,IAAR,CAAaqB,OAAb,CAAqB,GAArB,EAA0B,KAAKpB,IAA/B,CAAb;MAEAN,KAAK,CAAC2B,OAAN,CAAcL,OAAd,EAAuBM,IAAvB,CAA4B,UAAUC,QAAV,EAAoB;QAC5C;QACA,MAAMC,MAAK,GAAID,QAAQ,CAACxB,IAAT,CAAc0B,QAAd,CAAuB,CAAvB,EAA0BD,MAAzC;QACA,IAAIE,KAAI,GAAI,EAAZ;QACAF,MAAM,CAACG,OAAP,CAAeC,OAAM,IAAKF,KAAK,CAACG,IAAN,CAAWD,OAAO,CAACE,IAAnB,CAA1B;QACAN,MAAM,CAACG,OAAP,CAAeC,OAAM,IAAKf,OAAO,CAACC,GAAR,CAAYc,OAAO,CAACG,WAApB,CAA1B,EAL4C,CAM5C;QAEA;QAEA;MACH,CAXD,EAWGC,KAXH,CAWS,UAAUC,KAAV,EAAiB;QAEtBpB,OAAO,CAACoB,KAAR,CAAcA,KAAd;MAEH,CAfD;IAiBJ;EA5CI;AAhBG,CAAf","names":["axios","name","props","modelValue","String","data","test","comp","new","created","get","methods","submit","api","change_text","text","texte","splits","split","console","log","require","options","method","url","headers","replace","request","then","response","errors","elements","copie","forEach","element","push","word","suggestions","catch","error"],"sourceRoot":"","sources":["/Users/fareskerkeni/Desktop/vue/spell_checker/src/components/input.vue"],"sourcesContent":["<template>\n  <div class=\"input\">\n    <!-- <ul>\n      <div v-for=\"post in posts\" v-bind:key=\"post.id\">\n        {{post}}\n      </div>  \n    </ul> -->\n<!-- the text correction--> \n    <div>Enter the text you want to correct.</div>\n        <input type=\"text\" :value=\"modelValue\" @input=\"$emit('update:modelValue', $event.target.value)\"/>\n        <input type=\"submit\" @click=\"submit\">\n    </div>\n    {{test}}\n</template>\n\n<script>\n/* eslint-disable no-mixed-spaces-and-tabs */\nimport axios from 'axios'\nexport default {\n    name: 'input_user',\n    props:{\n        modelValue: String\n    },\n    data(){\n        return{\n            test: '',\n            comp: 0,\n            new:[],\n        }\n    },\n    created(){\n      axios.get()\n      \n     },\n    methods:{\n        submit: function(){\n            this.test+=this.modelValue\n            this.api()\n            this.change_text(this.text)\n            \n        },\n        change_text: function(texte){\n            var splits = texte.split(\" \");\n            console.log(splits)\n            return splits\n        },\n        api: function(){\n            const axios = require(\"axios\");\n            const options = {\n              method: 'POST',\n              url: 'https://jspell-checker.p.rapidapi.com/check',\n              headers: {\n                'content-type': 'application/json',\n                'X-RapidAPI-Key': 'b99b6429b8msh5b66ff41fd65591p1c52f0jsn03117ac8e6dc',\n                'X-RapidAPI-Host': 'jspell-checker.p.rapidapi.com'\n              },\n              data: '{\"language\":\"frFR\",\"fieldvalues\":\"1\",\"config\":{\"forceUpperCase\":false,\"ignoreIrregularCaps\":false,\"ignoreFirstCaps\":true,\"ignoreNumbers\":true,\"ignoreUpper\":false,\"ignoreDouble\":false,\"ignoreWordsWithNumbers\":true}}'\n            };\n            //modification de la valeur \n            options.data=options.data.replace('1', this.test);\n            \n            axios.request(options).then(function (response) {\n                //const suggestions=response.data.elements[0].errors[0].suggestions\n                const errors = response.data.elements[0].errors\n                var copie = [];\n                errors.forEach(element => copie.push(element.word));\n                errors.forEach(element => console.log(element.suggestions));\n                // console.log(copie)\n                \n                // console.log(errors)\n\n                // console.log(suggestions)\n            }).catch(function (error) {\n\t            \n                console.error(error);\n                \n            });\n           \n        }\n    }\n};\n\n</script>\n\n<style lang=\"scss\">\n.input{\n    form{\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        margin: 20px 0 20px 0;\n        .text{\n            width: 600px;\n            height: 500px;\n        }\n        .input{\n            margin: 20px 0 20px 0;\n        }\n    }\n}\n</style>"]},"metadata":{},"sourceType":"module"}